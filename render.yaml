# Konfiguracja wdrożenia aplikacji FastAPI na Render.com

services:
  # Definicja usługi webowej dla backendu FastAPI
  - type: web
    name: pixel-pasta-ai-backend # Nazwa usługi w Render
    env: python # Użyj środowiska Python
    region: frankfurt # Wybierz region najbliższy Tobie/Twoim użytkownikom (np. Frankfurt, Oregon)
    plan: free # Wybierz plan (darmowy ma ograniczenia)
    # Komenda do zbudowania zależności
    buildCommand: pip install -r fastapi_app/requirements.txt
    # Komenda do uruchomienia aplikacji w trybie produkcyjnym
    # Używa Gunicorn z workerem Uvicorn. Dostosuj liczbę workerów (-w) w zależności od planu Render.
    startCommand: gunicorn -w 4 -k uvicorn.workers.UvicornWorker fastapi_app.app.main:app --bind 0.0.0.0:$PORT
    # Zmienne środowiskowe (klucz API należy ustawić w panelu Render)
    envVars:
      - key: PYTHON_VERSION # Render może wymagać określenia wersji Pythona
        value: 3.11 # Użyj wersji kompatybilnej z Twoimi zależnościami
      - key: OPENROUTER_API_KEY
        sync: false # Nie synchronizuj z repozytorium, ustaw w panelu Render
      - key: APP_URL # Opcjonalne, jeśli potrzebujesz dla nagłówka Referer
        fromService: # Automatycznie pobierz URL usługi z Render
          type: web
          name: pixel-pasta-ai-backend
          property: url
      # UWAGA: Tesseract OCR nie jest instalowany w tej konfiguracji.
      # Jeśli potrzebujesz OCR PDF, rozważ użycie Dockerfile:
      # https://render.com/docs/docker

# Opcjonalnie: Konfiguracja dla frontendu SvelteKit (jako osobna usługa Static Site)
# - type: static
#   name: pixel-pasta-ai-frontend
#   env: node # Użyj środowiska Node.js do budowania
#   region: frankfurt
#   plan: free
#   buildCommand: cd frontend && npm install && npm run build
#   staticPublishPath: frontend/build # Ścieżka do zbudowanych plików statycznych SvelteKit (adapter-static)
#   routes:
#     - type: rewrite # Przekieruj wszystkie ścieżki do index.html dla SPA
#       source: /*
#       destination: /index.html
